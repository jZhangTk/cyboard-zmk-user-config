#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp F12    &kp F1  &kp F2  &kp F3  &kp F4     &kp F5                  &kp F6     &kp F7     &kp F8     &kp F9   &kp F10   &kp F11
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E   &kp R      &kp T                   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp CAPS   &kp A   &kp S   &kp D   &kp F      &kp G                   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B                   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&kp LCTRL  &mo 6   &mo 5   &mo 4   &kp BSPC                                      &kp DEL    &trans     &trans   &mo 7     &kp RCTRL
                                   &kp ENTER  &kp SPACE  &kp MINUS    &kp EQUAL  &kp SPACE  &kp ENTER
                                   &kp LALT   &kp LGUI   &kp LBKT     &kp RBKT   &kp RGUI   &kp RALT
            >;
        };

        Simple_Gaming_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                                       &trans  &trans  &trans  &trans  &trans
                                &trans  &trans             &trans    &trans  &trans  &trans
                                &trans  &kp K_APPLICATION  &trans    &trans  &trans  &trans
            >;
        };

        Gaming_Layer {
            bindings = <
&trans  &kp F5  &kp F1  &kp F2  &kp F3  &kp F4                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N5  &kp N1  &kp N2  &kp N3  &kp N4                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp T   &kp Q   &kp W   &kp E   &kp R                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp G   &kp A   &kp S   &kp D   &kp F                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp B   &kp Z   &kp X   &kp C   &kp V                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                                       &trans  &trans  &trans  &trans  &trans
                                &trans  &trans             &trans    &trans  &trans  &trans
                                &trans  &kp K_APPLICATION  &trans    &trans  &trans  &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&trans       &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&trans       &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
            >;
        };

        Macro_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Swap_Layer {
            bindings = <
&kp F11    &kp F10   &kp F9   &kp F8     &kp F7    &kp F6                 &kp F5     &kp F4    &kp F3    &kp F2  &kp F1  &kp F12
&kp BSPC   &kp N0    &kp N9   &kp N8     &kp N7    &kp N6                 &kp N5     &kp N4    &kp N3    &kp N2  &kp N1  &kp GRAVE
&kp BSLH   &kp P     &kp O    &kp I      &kp U     &kp Y                  &kp T      &kp R     &kp E     &kp W   &kp Q   &kp TAB
&kp APOS   &kp SEMI  &kp L    &kp K      &kp J     &kp H                  &kp G      &kp F     &kp D     &kp S   &kp A   &kp CAPS
&kp RSHFT  &kp FSLH  &kp DOT  &kp COMMA  &kp M     &kp N                  &kp B      &kp V     &kp C     &kp X   &kp Z   &kp LSHFT
&kp RCTRL  &trans    &trans   &trans     &kp DEL                                     &kp BSPC  &trans    &trans  &trans  &kp LCTRL
                                         &trans    &trans    &kp EQUAL    &kp MINUS  &trans    &trans
                                         &kp RALT  &kp RGUI  &kp RBKT     &kp LBKT   &kp LGUI  &kp LALT
            >;
        };

        Left_Nav_Layer {
            bindings = <
&kp C_PLAY_PAUSE  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC            &trans  &trans           &trans           &trans           &trans        &trans
&to 0             &to 1       &to 2              &to 3            &to 4                 &mo 5                           &trans  &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS  &kp DEL
&trans            &mkp MB5    &kp HOME           &kp UP           &kp END               &mkp RCLK                       &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &trans
&trans            &mkp MB4    &kp LEFT           &kp DOWN         &kp RIGHT             &mkp LCLK                       &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_COMMA  &trans
&trans            &trans      &kp PAGE_UP        &kp INSERT       &kp PAGE_DOWN         &mkp MCLK                       &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &trans
&trans            &trans      &trans             &trans           &kp DEL                                                       &kp KP_NUMBER_0  &kp KP_NUMBER_0  &kp KP_DOT       &kp KP_ENTER  &trans
                                                                  &trans                &trans                &trans    &trans  &trans           &trans
                                                                  &trans                &trans                &trans    &trans  &trans           &trans
            >;
        };

        Right_Nav_Layer {
            bindings = <
&trans  &trans  &trans           &trans           &trans           &trans                  &trans    &trans         &trans       &trans     &trans    &trans
&trans  &trans  &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS            &trans    &trans         &trans       &trans     &trans    &kp DEL
&trans  &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS             &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans    &trans
&trans  &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_COMMA            &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans    &trans
&trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL            &mkp MB4  &mkp LCLK      &mkp MCLK    &mkp RCLK  &mkp MB5  &trans
&trans  &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_0  &kp KP_DOT                                         &kp BSPC       &trans       &trans     &trans    &trans
                                                  &kp KP_ENTER     &trans        &trans    &trans    &trans         &trans
                                                  &trans           &trans        &trans    &trans    &trans         &trans
            >;
        };
    };
};

//right hand trackball configuration
// &trackball_peripheral_listener {
// input-processors =
// this gets it to the default installation orientation,,,
// <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>;
// activate layer 3 within 500ms of the trackball moving
// <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,
        // <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,,,,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,
        <&zip_xy_scaler 1 50>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
